#!/bin/bash
#SBATCH -t 1000:00:00
#SBATCH --nodes=1
#SBATCH --export=NONE
#SBATCH	-o /data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/2020_Scripts/Script_out_error_files/Prep_DESeq2_out_redo_2_11_2020
#SBATCH	-e /data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/2020_Scripts/Script_out_error_files/Prep_DESeq2_error_redo_2_11_2020

# This script converts Stringtie output into format for use with DESeq2.
# Generates two CSV files containing the count matrices for genes and transcripts, using the coverage values found in the output of stringtie -e
# Python script (prepDE.py) provided by Pertea et al. to extract this read count information directly from the
# files generated by StringTie (run with the -e parameter)
# Example text file format:
	# ERR188021 <PATH_TO_ERR188021.gtf>

echo "Start $(date)"
module load python/2.7.6

# Create variable for each path to trimmed and quality filtered data folder
P=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/2017_MISC_SCRIPTS
CP=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/C_Vir_subset/2020_Raw_Transcriptome_Data/C_vir_Probiotic_SRA
CR=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/C_Vir_subset/2020_Raw_Transcriptome_Data/C_vir_ROD_SRA
CD=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/C_Vir_subset/2020_Raw_Transcriptome_Data/Dermo_2015_transcriptomes/Fastq
GLO=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/C_gig_Bac_Viral_subset/2020_Raw_Transcriptome_Data/C_gig_deLorgeril_OsHV1_SRA
GHO=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/C_gig_Bac_Viral_subset/2020_Raw_Transcriptome_Data/C_gig_He_OsHV1_SRA
GRV=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/C_gig_Bac_Viral_subset/2020_Raw_Transcriptome_Data/C_gig_Rubio_Vibrio_SRA
GZV=/data3/marine_diseases_lab/erin/2017_2020_Transcriptome_Analysis/pipeline_files/C_gig_Bac_Viral_subset/2020_Raw_Transcriptome_Data/C_gig_Zhang_Vibrio_SRA

####### PE read experiments ######
# PE experiments: C_gig_deLorgeril_OsHV1, C_gig_Rubio_Vibrio_SRA_ID, C_vir_Probiotic_SRA_ID, C_vir_Dermo

## C_gig_deLorgeril_OsHV1
cd $GLO/
for i in *.merge.gtf; do
	# create text file with sample IDs and respective paths
	echo "$(echo $i |sed "s/\..*//") $GLO/$i" >> C_gig_deLorgeril_sample_list.txt
done

python prepDE_Oct.2019.py -v -i C_gig_deLorgeril_sample_list.txt -g deLorgeril_gene_count_matrix.csv -t deLorgeril_transcript_count_matrix.csv

# -i is the the parent directory of the sample sub-directories or a .txt file listing sample IDs and the paths to GTF files in tab-delimited format
# -g where to output the gene count matrix [default: gene_count_matrix.csv
# -t where to output the transcript count matrix [default: transcript_count_matrix.csv]
# -s STRING, --string=STRING	if a different prefix is used for geneIDs assigned by StringTie [default: MSTRG], don't need however since running now without -l

echo "C_gig_deLorgeril_OsHV1 DONE $(date)"

# C_gig_Rubio_Vibrio_SRA_ID
cd $GRV/
for i in *.merge.gtf; do
	# create text file with sample IDs and respective paths
	echo "$(echo $i |sed "s/\..*//") $GRV/$i" >> C_gig_Rubio_sample_list.txt
done

python prepDE_Oct.2019.py -v -i C_gig_Rubio_sample_list.txt -g Rubio_gene_count_matrix.csv -t Rubio_transcript_count_matrix.csv
echo "C_gig_Rubio_Vibrio_SRA_ID DONE $(date)"

# C_vir_Probiotic_SRA_ID
cd $CP/
for i in *.merge.gtf; do
	# create text file with sample IDs and respective paths
	echo "$(echo $i |sed "s/\..*//") $CP/$i" >> C_vir_Probiotic_sample_list.txt
done

python prepDE_Oct.2019.py -v -i C_vir_Probiotic_sample_list.txt -g Probiotic_gene_count_matrix.csv -t Probiotic_transcript_count_matrix.csv
echo "C_vir_Probiotic_SRA_ID DONE $(date)"

# C_vir_Dermo
cd $CD/
for i in *.merge.gtf; do
	# create text file with sample IDs and respective paths
	echo "$(echo $i |sed "s/\..*//") $CD/$i" >> C_vir_Dermo_sample_list.txt
done

python prepDE_Oct.2019.py -v -i C_vir_Dermo_sample_list.txt -g Dermo_gene_count_matrix.csv -t Dermo_transcript_count_matrix.csv
echo "C_vir_Dermo DONE $(date)"

####### SE read experiments ######
# SE experiments: C_gig_He_2015_OsHV1_SRA_ID, C_gig_Zhang_Vibrio_SRA_ID, C_vir_ROD_SRA_ID

# C_gig_He_2015_OsHV1_SRA_ID
cd $GHO/
for i in *.merge.gtf; do
	# create text file with sample IDs and respective paths
	echo "$(echo $i |sed "s/\..*//") $GHO/$i" >> C_gig_He_sample_list.txt # keep .. in sed command since these are SE and don't have underscore
done

python $P/prepDE.py -i C_gig_He_sample_list.txt -g He_gene_count_matrix.csv -t He_transcript_count_matrix.csv
echo "C_gig_He_2015_OsHV1_SRA_ID DONE $(date)"

# C_gig_Zhang_Vibrio_SRA_ID
cd $GZV/
for i in *.merge.gtf; do
	# create text file with sample IDs and respective paths
	echo "$(echo $i |sed "s/\..*//") $GZV/$i" >> C_gig_Zhang_sample_list.txt
done

python prepDE_Oct.2019.py -v -i C_gig_Zhang_sample_list.txt -g Zhang_gene_count_matrix.csv -t Zhang_transcript_count_matrix.csv
echo "C_gig_Zhang_Vibrio_SRA_ID DONE $(date)"

# C_vir_ROD_SRA_ID
cd $CR/
for i in *.merge.gtf; do
	# create text file with sample IDs and respective paths
	echo "$(echo $i |sed "s/\..*//") $CR/$i" >> C_vir_ROD_sample_list.txt
done

python prepDE_Oct.2019.py -v -i $CR/C_vir_ROD_sample_list.txt -g ROD_gene_count_matrix.csv -t ROD_transcript_count_matrix.csv
echo "C_vir_ROD_SRA_ID DONE $(date)"

#######
echo "All prepped $(date)"
